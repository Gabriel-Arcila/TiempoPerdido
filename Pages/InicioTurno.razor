@page "/"
@inject NavigationManager Navigation
@inject IDataOperador DataOperador;
@inject IDataTurnoTp DataTurnoTp;
@inject IDataDivision DataDivision;
@inject IDataLinea DataLinea;

<PageTitle>Tiempo Perdido</PageTitle>

@* <BSContainer PaddingBottom="Padding.Large">
    <BSRow>
        <h1 class="titulo">NEO</h1>
    </BSRow>
</BSContainer> *@

<BSCard CardType="CardType.Card" style="width: 90%;" MarginBottom="Margins.Large">
    <BSCard CardType="CardType.Body">
        @* <BSCard class="titulo" CardType="CardType.Title">Tiempo Perdido</BSCard> *@
        <BSCard CardType="CardType.Text">
            <section id="cajaPadre">
                <section id="cajalogo">
                    <BSImage id="logo" Source="img/Neo.png"/> 
                </section>
                <BSForm class="cajaContenido" Model="ficha" IsRow="true" Gutters="Gutters.Medium" OnSubmit="OK">
                    <section class="cajaContenido">
                        <BSCol Position="Position.Relative" Place ColumnMedium="4">

                            <BSInput InputType="InputType.Select"  placeholder="@info" rows="1" @bind-Value="idLinea">
                                <option value="0">Seleccione</option>
                                @if(listaLinea != null){
                                        @foreach (var item in listaLinea)
                                        {
                                            <option value="@item.IdLinea">@item.Lnom</option>
                                        }
                                }else{
                                    <option value="0">Cargando...</option>
                                }
                            </BSInput> 

                            @* <BSInput InputType="InputType.TextArea"  placeholder="@info" rows="1" @bind-Value="ficha"></BSInput> *@
                        </BSCol>
                    </section>
                    <section class="cajaContenido">
                        <section class="cajaimghome">
                            <BSButton IsSubmit="true" IsDisabled="@isDisabled"  id="link_on">
                                <BSImage Source="img/Encendido.png" />
                                <h1 id="ontext">Iniciar Turno</h1>
                            </BSButton>
                        </section>
                    </section>
                </BSForm>
            </section>
        </BSCard>
    </BSCard>
</BSCard>

@code {

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }
    
    [CascadingParameter]
    public int idLinea {get; set;}
    private bool isDisabled { get; set; }
    private string info { get; set; }
    private int idDivision { get; set; }
    private string ficha { get; set; }
    private Operador operador { get; set; }
    private TurnoTp turnoActual { get; set; }
    private bool isOk { get; set; }
    private List<Linea> listaLinea  { get; set; }
    
    protected override async Task  OnInitializedAsync()
    {
        ficha = "";
        operador = new Operador();
        isDisabled = false;
        turnoActual = await DataTurnoTp.TurnoActual(1);
        info = "Coloque la Ficha";
        if (authenticationState is not null)
        {
            AuthenticationState? authState = await authenticationState;
            ClaimsPrincipal? user = authState?.User;
            if (user?.Identity is not null && user.Identity.IsAuthenticated)
            {
                idDivision = int.Parse(user.FindFirst(c => c.Type == "IdDivision")?.Value ?? "0") ;
                listaLinea = await DataLinea.ObtenerLasLineasPorDivision(idDivision);
            }
        }
    }

    protected async Task hi(){}

    protected async Task OK(EditContext e){
        isDisabled = true;
        ficha = ficha.ToUpper().Trim();
        operador = await DataOperador.BuscarOperador(ficha);
        var a = DateTime.Now.Date;
        if(operador != null){
            @* isOk = await DataTurnoTp.ActulizarTurno(turnoActual); *@
            isOk = true;
            if(isOk){
                Navigation.NavigateTo("Paradas");
            }else{
                ficha = "";
                info = "Error en la carga. Intente de nuevo";
            }
        }else{
            ficha = "";
            info = "Ficha Invalida";
        }
        isDisabled = false;
    }
}